
- **latitude / longitude**: Your location in decimal degrees (Google Maps can provide these).
- **user_agent**: Identify your BBS and include contact info.
- **weathericon_ext**: File extension of your primary icon set (.asc or .ans).
- **fallback_type**:  
    - `bbsip` — automatically detect caller’s IP for location  
    - `nonip` — use `fallback` value (ZIP, ICAO, or IATA code)
- **fallback**: Only required if `fallback_type = nonip`.

--------------------

II) External Program Configuration

**Weather App (weather.js)**

[weather.js]
 1: Name                       Your Local Weather
 2: Internal Code              SYNCWX
 3: Start-up Directory         ../xtrn/syncWX/
 4: Command Line               ?weather.js
 5: Clean-up Command Line      
 6: Execution Cost             None
 7: Access Requirements        
 8: Execution Requirements     
 9: Multiple Concurrent Users  Yes
10: Intercept Standard I/O     No
11: Native (32-bit) Executable No
12: Use Shell to Execute       No
13: Modify User Data           No
14: Execute on Event           No (or "Logon" to auto-run)
15: Pause After Execution      No
16: BBS Drop File Type         None
17: Place Drop File In         Node Directory
18: Time Options...

--------------------

**Icon Viewer (iconset.js)**

[iconset.js]
 1: Name                       View Icon Set
 2: Internal Code              WTHRICON
 3: Start-up Directory         ../xtrn/syncWX/
 4: Command Line               ?iconset.js
 5: Clean-up Command Line      
 6: Execution Cost             None
 7: Access Requirements        LEVEL 90
 8: Execution Requirements     
 9: Multiple Concurrent Users  Yes
10: Intercept Standard I/O     No
11: Native (32-bit) Executable No
12: Use Shell to Execute       No
13: Modify User Data           No
14: Execute on Event           No
15: Pause After Execution      No
16: BBS Drop File Type         None
17: Place Drop File In         Node Directory
18: Time Options...

--------------------

III) Icon Files

Icons are stored in `icons/` and come in ANSI (.ans) and ASCII (.asc) versions.  
The `.asc` icons are automatically used for callers without ANSI capability.  
For ANSI callers with monochrome terminals, the color information will be removed but ANSI layout preserved.

If you design custom icons:
- Keep both ANSI and ASCII sets.
- Set `weathericon_ext` in `modopts.ini` to your preferred set.
- Test with color ANSI, mono ANSI, and pure ASCII callers to ensure readability.

--------------------
